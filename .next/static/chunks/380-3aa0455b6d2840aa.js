"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[380],{3522:(e,r,s)=>{s.d(r,{R2:()=>c,UQ:()=>d,u5:()=>i});var t=s(5125),o=s(2378);let a=t.A.create({baseURL:"https://api.theschoolofoptions.com/api/v1",timeout:15e3,headers:{"Content-Type":"application/json",Accept:"application/json"},withCredentials:!1});a.interceptors.request.use(e=>{var r,s,t;let a=o.A.get("accessToken");return!a||(null==(r=e.url)?void 0:r.includes("/auth/"))||(null==(s=e.url)?void 0:s.includes("/otp/"))||(e.headers.Authorization="Bearer ".concat(a)),console.log("Making ".concat(null==(t=e.method)?void 0:t.toUpperCase()," request to: ").concat(e.url)),e},e=>Promise.reject(e)),a.interceptors.response.use(e=>e,async e=>{var r,s,t,n,c,i,u;let l=e.config;if((null==(r=e.response)?void 0:r.status)===401&&!l._retry){l._retry=!0;try{let e=o.A.get("refreshToken");if(e){let r=await a.post("/auth/refresh-token",{refreshToken:e}),d=(null==(s=r.data)?void 0:s.accessToken)||(null==(n=r.data)||null==(t=n.tokens)?void 0:t.AccessToken),f=(null==(c=r.data)?void 0:c.refreshToken)||(null==(u=r.data)||null==(i=u.tokens)?void 0:i.RefreshToken);if(d)return o.A.set("accessToken",d),f&&o.A.set("refreshToken",f),l.headers.Authorization="Bearer ".concat(d),a(l)}}catch(e){o.A.remove("accessToken"),o.A.remove("refreshToken"),console.error("Token refresh failed:",e)}}return"ECONNABORTED"===e.code?console.error("Request timeout"):e.response?console.error("Server error:",e.response.status,e.response.data):e.request?console.error("Network error:",e.request):console.error("Error:",e.message),Promise.reject(e)});let n=async function(e){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;for(let o=0;o<=r;o++)try{return await e()}catch(e){if(o===r)throw e;if(t.A.isAxiosError(e)&&("ECONNABORTED"===e.code||"ENOTFOUND"===e.code||"ECONNREFUSED"===e.code||!e.response)){await new Promise(e=>setTimeout(e,s*(o+1)));continue}throw e}throw Error("Max retries exceeded")},c={login:async e=>{try{console.log("\uD83C\uDF10 API: Sending login request for:",e.email);let r=await n(()=>a.post("/auth/login",e));return console.log("\uD83C\uDF10 API: Login response received:",r.data),{success:!0,message:"Login successful",data:r.data}}catch(e){return console.error("\uD83C\uDF10 API: Login request failed:",e),u(e,"Login failed")}},signup:async e=>{try{let r=await n(()=>a.post("/auth/signup",e));return{success:!0,message:"Account created successfully",data:r.data}}catch(e){return u(e,"Signup failed")}},forgotPassword:async e=>{try{let r=await n(()=>a.post("/auth/forgot-password",e));return{success:!0,message:"Password reset instructions sent to your email",data:r.data}}catch(e){return u(e,"Failed to send reset email")}},resetPassword:async e=>{try{let r=await n(()=>a.post("/auth/reset-password",e));return{success:!0,message:"Password reset successfully",data:r.data}}catch(e){return u(e,"Failed to reset password")}},refreshToken:async e=>{try{let r=await n(()=>a.post("/auth/refresh-token",e));return{success:!0,message:"Token refreshed successfully",data:r.data}}catch(e){return u(e,"Failed to refresh token")}}},i={generate:async e=>{try{return await n(()=>a.post("/otp/generate",e)),{success:!0,message:"OTP sent successfully"}}catch(e){return l(e,"Failed to send OTP")}},verify:async e=>{try{return await n(()=>a.post("/otp/verify",e)),{success:!0,message:"OTP verified successfully"}}catch(e){return l(e,"OTP verification failed")}}},u=(e,r)=>{if(t.A.isAxiosError(e)){if("ECONNABORTED"===e.code)return{success:!1,error:"Connection timeout. Please try again later."};else if(e.response){var s,o;let t=e.response.status,a=(null==(s=e.response.data)?void 0:s.message)||(null==(o=e.response.data)?void 0:o.error);if(401===t)return{success:!1,error:"Invalid credentials. Please check your email and password."};if(409===t)return{success:!1,error:"Email already exists. Please use a different email or try logging in."};if(400===t)return{success:!1,error:a||"Invalid request. Please check your information."};else if(t>=500)return{success:!1,error:"Server error. Please try again in a few minutes."};else return{success:!1,error:a||r}}else if(e.request)return{success:!1,error:"Unable to connect to server. Please check your internet connection."}}return{success:!1,error:r}},l=(e,r)=>{if(t.A.isAxiosError(e)){if("ECONNABORTED"===e.code)return{success:!1,error:"Connection timeout. Please try again later."};else if(e.response){var s,o;let t=e.response.status,a=(null==(s=e.response.data)?void 0:s.message)||(null==(o=e.response.data)?void 0:o.error);return 400===t?{success:!1,error:a||"Invalid OTP. Please check and try again."}:429===t?{success:!1,error:"Too many attempts. Please wait before trying again."}:t>=500?{success:!1,error:"Server error. Please try again in a few minutes."}:{success:!1,error:a||r}}else if(e.request)return{success:!1,error:"Unable to connect to server. Please check your internet connection."}}return{success:!1,error:r}},d={subscribe:async e=>{try{return await n(()=>a.post("/subscriber",e)),{success:!0,message:"Successfully subscribed! Welcome to our newsletter."}}catch(e){if(t.A.isAxiosError(e))if("ECONNABORTED"===e.code)throw Error("Connection timeout. The server is taking too long to respond. Please try again later.");else if(e.response){var r,s;let t=e.response.status,o=(null==(r=e.response.data)?void 0:r.message)||(null==(s=e.response.data)?void 0:s.error);if(409===t)throw Error("This email is already subscribed to our newsletter.");if(400===t)throw Error(o||"Invalid email address. Please check and try again.");if(t>=500)throw Error("Server error. Please try again in a few minutes.");else throw Error(o||"Subscription failed. Please try again.")}else if(e.request)throw Error("Unable to connect to server. Please check your internet connection.");else throw Error("Request setup failed. Please try again.");throw Error("Unexpected error occurred. Please try again.")}}}},5380:(e,r,s)=>{s.d(r,{A:()=>l,AuthProvider:()=>u});var t=s(5155),o=s(2115),a=s(3522),n=s(2378),c=s(5125);let i=(0,o.createContext)(void 0);function u(e){let{children:r}=e,[s,u]=(0,o.useState)(null),[l,d]=(0,o.useState)(!0);(0,o.useEffect)(()=>{(async()=>{try{let e=n.A.get("accessToken"),r=(n.A.get("refreshToken"),await c.A.get("https://api.theschoolofoptions.com/api/v1/auth/get-user",{headers:{Authorization:"Bearer ".concat(e)}}));if(e&&r)try{u(r)}catch(e){console.error("❌ AuthContext: Error parsing stored user data:",e),f()}else console.log("❌ AuthContext: No valid stored authentication data found")}catch(e){console.error("❌ AuthContext: Auth initialization error:",e),f()}finally{d(!1)}})()},[]);let f=()=>{n.A.remove("accessToken"),n.A.remove("refreshToken"),u(null)},h=async()=>{try{let s=n.A.get("refreshToken");if(!s)return!1;let t=await a.R2.refreshToken({refreshToken:s});if(!t.success||!t.data)return f(),!1;{var e,r;let s=t.data.accessToken||(null==(e=t.data.tokens)?void 0:e.AccessToken),o=t.data.refreshToken||(null==(r=t.data.tokens)?void 0:r.RefreshToken),a=t.data.user;return s&&n.A.set("accessToken",s),o&&n.A.set("refreshToken",o),a&&(n.A.set("user",JSON.stringify(a)),u(a)),!0}}catch(e){return console.error("Token refresh failed:",e),f(),!1}},g=e=>{var r,s;let t=e.accessToken||(null==(r=e.tokens)?void 0:r.AccessToken),o=e.refreshToken||(null==(s=e.tokens)?void 0:s.RefreshToken),a=e.user;t&&n.A.set("accessToken",t),o&&n.A.set("refreshToken",o),a&&u(a)},y=async(e,r)=>{try{let s=await a.R2.login({email:e,password:r});return s.success&&s.data&&g(s.data),s}catch(e){return{success:!1,error:"Login failed. Please try again."}}},p=async(e,r,s)=>{try{let t=await a.R2.signup({email:e,password:r,fullName:s});return localStorage.setItem("pass",r),t.success&&t.data&&g(t.data),t}catch(e){return{success:!1,error:"Signup failed. Please try again."}}},v=async e=>{try{return await a.R2.forgotPassword({email:e})}catch(e){return{success:!1,error:"Failed to send reset email. Please try again."}}},w=async(e,r)=>{try{return await a.R2.resetPassword({token:e,password:r})}catch(e){return{success:!1,error:"Failed to reset password. Please try again."}}},k=async(e,r)=>{try{return await a.u5.generate({email:e,type:r})}catch(e){return{success:!1,error:"Failed to send OTP. Please try again."}}},A=async(e,r,s)=>{try{let t=localStorage.getItem("pass"),o=await a.u5.verify({email:e,otp:r,type:s,password:null!=t?t:""});return o.success&&"signup"===s&&t&&((await y(e,t)).success?localStorage.removeItem("pass"):console.error("❌ AuthContext: Failed to auto-login after signup verification")),o}catch(e){return console.error("Verify OTP error:",e),{success:!1,error:"OTP verification failed. Please try again."}}};return(0,t.jsx)(i.Provider,{value:{user:s,isAuthenticated:!!s,isLoading:l,login:y,signup:p,logout:()=>{f()},forgotPassword:v,resetPassword:w,generateOTP:k,verifyOTP:A,refreshTokenIfNeeded:h},children:r})}function l(){let e=(0,o.useContext)(i);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}}}]);